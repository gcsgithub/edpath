.\" Copyright (c) 1988, 2010
.\"   Garetech Computer Solutions Australia.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE Garetech AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE Garetech OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#) $Id: edpath.1,v 1.1 2010/12/06 23:01:48 mark Exp mark $
.\"

.Dd 02/12/2010
.Dt edpath 1
.Os UNIX
.Sh NAME
.Nm edpath
.Nd edit path
.Sh SYNOPSIS
.Nm
.Op Fl dvVh?
.Ar path ...
.Sh DESCRIPTION
.Nm
can be use to prevent an ever growthing path statement following multiple includes and general errors of repetition in path statments
.Pp
edpath takes one or more PATH's to be appended uniquely.
It will merge and dedup each path path returning a final output via stdout newpath
.Pp
	PATH="$( edpath /some/path ${PATH} )"
.Pp
	export PATH
.Pp
Working left to right removed duplicates will not change the path search order which also operates left to right.
.Pp
The options are as follows:
.Bl -tag -width -indent
.It Fl r <entry>
Remove <entry> if found in the merged list
.It Fl d
Enable Debug, only really useful to the Author
.It Fl v
May display internal operations like duplicates being dropped, only really useful to the Author
.It Fl V
Display version and exit
.It Fl h | Fl ?
Display Usage/help
.El
.Pp
.Sh SEE ALSO 
.Xr ksh 1 , 
.Xr sh 1 ,
.Sh BUGS
None that I know of
.\" .Sh HISTORY
